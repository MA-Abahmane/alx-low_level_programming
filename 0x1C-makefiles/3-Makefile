## Requirements:
##  name of the executable: school
##  - rules: all, clean, oclean, fclean, re
##  all: builds your executable
##  clean: deletes all Emacs and Vim temporary files along with the executable
##  oclean: deletes the object files
##  fclean: deletes all Emacs and Vim temporary files, the executable, and the object files
##  re: forces recompilation of all source files
##  - variables: CC, SRC, OBJ, NAME, RM
##  CC: the compiler to be used
##  SRC: the .c files
##  OBJ: the .o files
##  NAME: the name of the executable
##  RM: the program to delete files
##  The all rule should recompile only the updated source files
##  The clean, oclean, fclean, re rules should never fail
##  You are not allowed to have a list of all the .o files

CC = gcc
SRC = main.c school.c
OBJ = $(SRC:.c=.o)
NAME = school
RM = rm -f

## By declaring 'all' as 'PHONY', 'make' considers the file 'school' as outdated and creats a new one
.PHONY : all

all: $(OBJ)
	$(CC) $(OBJ) -o $(NAME)

%.o: %.c
	$(CC) -c $< -o $@

clean:
	$(RM) *~ school

oclean:
	$(RM) main.o school.o

fclean: clean oclean

re: oclean all
